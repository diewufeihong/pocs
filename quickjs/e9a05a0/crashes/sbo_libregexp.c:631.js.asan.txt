=================================================================
==2505360==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffa2e0 at pc 0x5555555dab92 bp 0x7fffffffa1f0 sp 0x7fffffffa1e0
WRITE of size 1 at 0x7fffffffa2e0 thread T0
    #0 0x5555555dab91 in parse_unicode_property /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:631
    #1 0x5555555dab91 in get_class_atom /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:769
    #2 0x5555555dafa4 in re_parse_term /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:1466
    #3 0x5555555def99 in re_parse_alternative /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:1710
    #4 0x5555555df179 in re_parse_disjunction /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:1735
    #5 0x5555555df939 in lre_compile /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:1851
    #6 0x5555556406a2 in js_compile_regexp /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:41480
    #7 0x5555556c2848 in js_parse_postfix_expr /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24125
    #8 0x5555556b0172 in js_parse_unary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24827
    #9 0x5555555e6ce1 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24889
    #10 0x5555555e6ce1 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #11 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #12 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #13 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #14 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #15 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #16 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #17 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #18 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #19 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #20 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #21 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #22 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #23 0x5555555e6a91 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #24 0x5555555e6a91 in js_parse_expr_binary.part.0.lto_priv.0 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24891
    #25 0x5555556a2591 in js_parse_expr_binary /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:24888
    #26 0x5555556a2591 in js_parse_logical_and_or /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25034
    #27 0x5555556a2547 in js_parse_logical_and_or /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25037
    #28 0x5555556a27c9 in js_parse_coalesce_expr /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25073
    #29 0x5555556a27c9 in js_parse_cond_expr /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25100
    #30 0x5555556a27c9 in js_parse_assign_expr /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25263
    #31 0x5555556a41be in js_parse_expr2 /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25310
    #32 0x5555556a7cb5 in js_parse_expr /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:25332
    #33 0x5555556a7cb5 in js_parse_statement_or_decl /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:26616
    #34 0x5555556ae0ba in js_parse_source_element /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:28291
    #35 0x555555694d6f in js_parse_program /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:32904
    #36 0x555555694d6f in __JS_EvalInternal /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:33076
    #37 0x555555675374 in JS_EvalInternal /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:33116
    #38 0x555555675374 in JS_Eval /home/hongxu/work/qjs/QuickJS-asan/quickjs.c:33146
    #39 0x555555749fcf in eval_buf /home/hongxu/work/qjs/QuickJS-asan/qjs.c:67
    #40 0x55555574a1b2 in eval_file /home/hongxu/work/qjs/QuickJS-asan/qjs.c:99
    #41 0x55555558a1d8 in main /home/hongxu/work/qjs/QuickJS-asan/qjs.c:503
    #42 0x7ffff73a70b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #43 0x55555558a5ad in _start (/home/hongxu/work/qjs/QuickJS-asan/qjs+0x365ad)

Address 0x7fffffffa2e0 is located in stack of thread T0 at offset 128 in frame
    #0 0x5555555d966f in get_class_atom /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:712

  This frame has 3 object(s):
    [32, 40) 'p' (line 713)
    [64, 128) 'name' (line 616) <== Memory access at offset 128 overflows this variable
    [160, 224) 'value' (line 616)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/hongxu/work/qjs/QuickJS-asan/libregexp.c:631 in parse_unicode_property
Shadow bytes around the buggy address:
  0x10007fff7400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7440: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007fff7450: 00 f2 f2 f2 00 00 00 00 00 00 00 00[f2]f2 f2 f2
  0x10007fff7460: 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00 00 00
  0x10007fff7470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7480: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 02 f2
  0x10007fff7490: 04 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
  0x10007fff74a0: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00 f2 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==2505360==ABORTING
